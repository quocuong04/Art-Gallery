@model Art_Gallery.Models.Artwork

@{
    ViewBag.Title = "Edit Artwork Page";
}
@{
    Layout = "~/Views/Shared/Admin_Layout.cshtml";
}

@using (Html.BeginForm(Html.BeginForm("Edit", "ArtworksAdmin", FormMethod.Post, new { enctype = "multipart/form-data" })))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal p-3">
    <h4>Artwork</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status1.StatusName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Status1.StatusName, new { htmlAttributes = new { @class = "form-control", @disabled="disabled" } })
            @Html.ValidationMessageFor(model => model.Status1.StatusName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AuctionPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AuctionPrice, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.AuctionPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CreateDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CreateDate, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.CreateDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Descriptions, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Descriptions, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Descriptions, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                string img = Model.Image;
            }

            @if (!string.IsNullOrEmpty(img))
            {
                <img width="200" src="~/Content/uploads/@img" id="current-image" />
            }

            @Html.TextBoxFor(m => m.Image, new { type = "file", @class = "form-control", @id = "image-field" })
            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2" disabled="disabled">
            Employee Created
        </label>
        <div class="col-md-10">
            @{
                var dropdownListAttributes = new Dictionary<string, object>();
                dropdownListAttributes.Add("class", "form-control");
                dropdownListAttributes.Add("disabled", "disabled");
            }
            @Html.DropDownList("EmployeeId", null, dropdownListAttributes)
            @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ArtistId, "Artist", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ArtistId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ArtistId, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.HiddenFor(model => model.ArtworkId)

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div class="pl-3 pr-3">
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    document.getElementById('image-field').addEventListener('change', function (event) {
        var input = event.target;
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                var currentImage = document.getElementById('current-image');
                if (currentImage) {
                    currentImage.src = e.target.result;
                }
            };

            reader.readAsDataURL(input.files[0]);
        }
    });
</script>