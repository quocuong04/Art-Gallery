@model Art_Gallery.Controllers.AdminControllers.AuctionsAdminController.AuctionEditModel

@{
    ViewBag.Title = "Edit Auction Page";
}
@{
    Layout = "~/Views/Shared/Admin_Layout.cshtml";
}


@using (Html.BeginForm(Html.BeginForm("Edit", "AuctionsAdmin", FormMethod.Post, new { enctype = "multipart/form-data" })))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal p-3">
    <h4>Auction</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Auction.AuctionId)

    <div class="form-group">
        @Html.LabelFor(model => model.Auction.AuctionName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Auction.AuctionName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Auction.AuctionName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Auction.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Auction.StartDate, new { type = "datetime", @class = "form-control", value = Model.Auction.StartDate })
            @Html.ValidationMessageFor(model => model.Auction.StartDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Auction.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Auction.EndDate, new { type = "datetime", @class = "form-control", value = Model.Auction.EndDate })
            @Html.ValidationMessageFor(model => model.Auction.EndDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Status", "Select Status:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.StatusSelected, ViewBag.StatusList as SelectList, new { @class = "form-control"})
            @Html.ValidationMessageFor(m => m.StatusSelected, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Artworks", "Select Artworks:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.ListBoxFor(m => m.SelectedArtworkIds, ViewBag.Artworks as MultiSelectList, new { @class = "form-control", multiple = "multiple" })
            @Html.ValidationMessageFor(m => m.SelectedArtworkIds, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Auction.Image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                string img = Model.Auction.Image;
            }

            @if (!string.IsNullOrEmpty(img))
            {
                <img width="200" src="~/Content/uploads/@img" id="current-image" />
            }
            <input type="file" name="Image" id="image-field" class="form-control" />
            @Html.ValidationMessageFor(model => model.Auction.Image, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div class="pl-3 pr-3">
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    document.getElementById('image-field').addEventListener('change', function (event) {
        var input = event.target;
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                var currentImage = document.getElementById('current-image');
                if (currentImage) {
                    currentImage.src = e.target.result;
                }
            };

            reader.readAsDataURL(input.files[0]);
        }
    });
</script>